@model coliks.Models.GridPagination
@{
    int count = ((Model.CurrentPage - 1) * Model.TakeCount) + 1; // This is the serial number Calculation
    int TotalCounter = 0;
    bool showFooter = true;

    // We will show only 5 buttons on footer to paginate
    // Because if the data is more then it will look worst with multiple buttons in footer
    int StartButton = 1;
    // Checking if total page is greate then 5 else we will take upto
    // whatever the total page is
    double EndButton = 5 > Model.TotalPage ? Model.TotalPage : 5;
}
<div class="row">
    <div class="col-2">
        <a href="/Items/Create" class="btn btn-primary">Cr&eacute;er un objet</a><br />

        @if (showFooter) // This is not working because the affectation was done in the table after
        {
            <div class="mt-2">
                <a href="#pagination" id="head">Aller en bas</a>
            </div>
        }
    </div>

    <div class="col-8">
        <div class="row">
            <div class="col"> <p>Rechercher par No. article, marque, mod&egrave;le ou stock  : </p></div>
            <div class="col"> <input type="text" id="search" class="form-control filter-text" value="@Model.filters.search" autocomplete="off" /></div>
        </div>
    </div>
    <div class="col-2 col-auto"><a id="clearFilter" href="#" class="btn-link" hidden>Effacer les filtre</a></div>
</div>

<form asp-action="Edit">
    <table class="table table-bordered text-center">
        <thead>
            @*Setting the filter values in text boxes*@
            <tr>
                <th>@Html.DisplayNameFor(model => model.Data[0].Itemnb) <input type="text" id="item_nb" class="form-control filter-text" value="@Model.filters.itemnb" autocomplete="off" /></th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].Brand)
                    <select id="item_brand" class="form-control filter-text">
                        <option value="">Toutes</option>
                        @foreach (var brd in ViewBag.brand)
                        {
                            <option value="@brd.Id" label="@brd.Brandname"></option>
                        }
                    </select>
                </th>
                <th>@Html.DisplayNameFor(model => model.Data[0].Model) <input type="text" id="item_model" class="form-control filter-text" value="@Model.filters.model" autocomplete="off" /></th>
                <th>@Html.DisplayNameFor(model => model.Data[0].Size) <input type="number" id="item_size" class="form-control filter-text" value="@Model.filters.size" autocomplete="off" /></th>
                <th>@Html.DisplayNameFor(model => model.Data[0].Cost)</th>
                <th>@Html.DisplayNameFor(model => model.Data[0].Returned)</th>
                <th>@Html.DisplayNameFor(model => model.Data[0].Type)</th>
                <th>@Html.DisplayNameFor(model => model.Data[0].Stock) <input type="number" id="item_stock" class="form-control filter-text" value="@Model.filters.stock" autocomplete="off" /></th>
                <th>@Html.DisplayNameFor(model => model.Data[0].Serialnumber)</th>
                <th>
                    @Html.DisplayNameFor(model => model.Data[0].Category)
                    <select id="item_gender" class="form-control filter-text">
                        <option value="">Toutes</option>
                        @foreach (var cat in ViewBag.categories)
                        {
                            <option value="@cat.Id" label="@cat.Description"></option>
                        }
                    </select>
                </th>
                <th>&Eacute;dition multiple</th>
            </tr>
        </thead>
        <tbody id="tableBody">
            @if (Model != null && Model.Data != null && Model.Data.Count > 0)
            {
                foreach (var item in Model.Data)
                {
                    <tr onclick="location.href = 'Items/Details/@item.Id'">
                        <td>
                            @Html.DisplayFor(modelItem => item.Itemnb)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Brand.Brandname)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Model)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Size)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Cost)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Returned)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Type)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Stock)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Serialnumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Category.Description)
                        </td>
                        <td onclick="cancelIt(event);">
                            <input type="checkbox" value="@item.Id" id="isSelected" name="isSelected" />
                        </td>
                    </tr>
                }
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>
                        <input type="number" id="multiple_stock" name="multiple_stock" class="form-control" />
                    </td>
                    <td></td>
                    <td>
                        <select id="multiple_category" class="form-control" name="multiple_category">
                            <option value=""></option>
                            @foreach (var cat in ViewBag.categories)
                            {
                                <option value="@cat.Id" label="@cat.Description"></option>
                            }
                        </select>
                    </td>
                    <td>
                        <input type="submit" class="btn btn-primary" />
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    <td colspan="11" style="text-align: center;">Aucun objet trouv&eacute;</td>
                </tr>
                showFooter = false;
            }
        </tbody>
    </table>
</form>

<div class="panel-footer" id="pagination">

    @if (showFooter)
    {
        <div class="row ml-1">
            <a href="#head">Aller en haut</a>
        </div>
        <div class="row">
            <div class="col-2">
                Page @Model.CurrentPage sur @Model.TotalPage <br />
                Total : @Model.TotalData objets
            </div>
            <div class="col-10">
                <ul class="pagination pull-right">
                    @*if current page is 1 then there is no need of showing previous and jump backward buttons*@
                    @if (Model.CurrentPage != 1)
                    {
                        //Jump backward button
                        if (Model.CurrentPage >= 3)
                        {
                            <li>&nbsp;<a href="javascript:void(0);" class="filter-page btn btn-primary" data-page="@(1)"><span><<</span></a> <a href=""</li>
                        }

                        //Prevoius button
                        <li>&nbsp;<a href="javascript:void(0);" data-page="@(Model.CurrentPage - 1)" class="@(Model.CurrentPage == 1 ? "" : "filter-page") btn btn-primary">Prev</a></li>

                        //Start button and jump backward button's calculation
                        StartButton = Model.CurrentPage - 2 <= 0 ? 1 : Model.CurrentPage - 2;
                        EndButton = Model.CurrentPage + 2 > Model.TotalPage ? Model.TotalPage : Model.CurrentPage + 2;
                        if (Model.CurrentPage == Model.TotalPage)
                        {
                            StartButton = StartButton - 2 <= 0 ? 1 : StartButton - 2;
                        }
                    }

                    @*Five buttons*@
                    @for (int i = StartButton; i <= EndButton; i++)
                    {
                        <li>&nbsp;<a href="javascript:void(0);" class="@(Model.CurrentPage == i ? "active page" : "filter-page") btn btn-outline-primary" data-page="@i">@i</a></li>
                    }

                    @* next button *@
                    @if (Model.CurrentPage != Model.TotalPage && Model.TotalPage > 1)
                    {
                        <li>&nbsp;<a href="javascript:void(0);" data-page="@(Model.CurrentPage + 1)" class="@(Model.CurrentPage == TotalCounter ? "" : "filter-page") btn btn-primary">Next</a></li>
                    }

                    @* Jump forward button calculation *@
                    @if (EndButton != Model.TotalPage)
                    {
                        <li>&nbsp;<a href="javascript:void(0);" class="filter-page btn btn-primary" data-page="@(Model.TotalPage)"><span>>></span></a></li>
                    }
                </ul>
            </div>
            <div class="col col-xs-4"></div>
        </div>
    }
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/js/item.js"></script>